---
export interface Props {
  title: string;
}

const { title } = Astro.props;
import 'element-plus/theme-chalk/dark/css-vars.css';
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  </head>
  <body>
    <slot />
  </body>
</html>

<script>
  // 主题切换逻辑
  const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
  if (mediaQuery.matches) {
    document.documentElement.classList.add('dark');
  } else {
    document.documentElement.classList.remove('dark');
  }
  mediaQuery.addEventListener('change', (e) => {
    if (e.matches) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  });

  // 自动设置HTML语言属性
  function setLanguageAttribute() {
    // 获取浏览器语言设置
    const language = navigator.language || navigator.languages?.[0] || 'en';

    // 根据完整的语言代码进行匹配
    const lowerLang = language.toLowerCase();

    let detectedLang = 'en';

    if (lowerLang.startsWith('zh-cn') || lowerLang.startsWith('zh-hans')) {
      detectedLang = 'zh-CN';
    } else if (
      lowerLang.startsWith('zh-hk') ||
      lowerLang.startsWith('zh-tw') ||
      lowerLang.startsWith('zh-hant') ||
      lowerLang.startsWith('zh-mo')
    ) {
      detectedLang = 'zh-HK';
    } else if (lowerLang.startsWith('zh')) {
      // 默认情况下，如果只是 'zh'，默认简体
      detectedLang = 'zh-CN';
    }

    // 设置HTML lang属性
    document.documentElement.setAttribute('lang', detectedLang);
  }

  // 页面加载时设置语言
  setLanguageAttribute();
</script>
